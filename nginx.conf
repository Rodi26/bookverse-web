worker_processes auto;
events { 
  worker_connections 1024; 
  use epoll;
}
http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;
  
  # Resilience improvements
  proxy_connect_timeout 5s;
  proxy_send_timeout 10s;
  proxy_read_timeout 10s;
  proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
  proxy_next_upstream_tries 3;
  
  # Enable gzip compression
  gzip on;
  gzip_vary on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  server {
    listen 8080;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;
    
    # Proxy static files to inventory service
    location /static/ {
      proxy_pass http://inventory/static/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # Resilience settings
      proxy_connect_timeout 3s;
      proxy_send_timeout 5s;
      proxy_read_timeout 5s;
      
      # Caching for static assets
      expires 1h;
      add_header Cache-Control "public, immutable";
    }
    
    # Proxy API calls to backend services with resilience
    location /api/v1/books {
      proxy_pass http://inventory/api/v1/books;
      include /etc/nginx/proxy_params.conf;
    }
    
    location /api/v1/inventory {
      proxy_pass http://inventory/api/v1/inventory;
      include /etc/nginx/proxy_params.conf;
    }
    
    location /api/v1/recommendations {
      proxy_pass http://recommendations;
      include /etc/nginx/proxy_params.conf;
    }
    
    location /api/v1/checkout {
      proxy_pass http://checkout;
      include /etc/nginx/proxy_params.conf;
    }
    
    location /orders {
      proxy_pass http://checkout/orders;
      include /etc/nginx/proxy_params.conf;
    }
    
    # Health check endpoint
    location /health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }
    
    location / {
      try_files $uri $uri/ /index.html;
    }
  }
}


